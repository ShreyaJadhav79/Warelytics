/*
===============================================================================
Magnitude Analysis
===============================================================================
Purpose:
    - To quantify data and group results by specific dimensions.
    - For understanding data distribution across categories.

SQL Functions Used:
    - Aggregate Functions: SUM(), COUNT(), AVG()   --> For totals, counts, averages
    - GROUP BY                                     --> To group data by a column
    - ORDER BY                                     --> To sort results
===============================================================================
*/

-- Find total customers by countries
SELECT
    country,                          -- Country name
    COUNT(customer_key) AS total_customers  -- Count of customers in each country
FROM gold.dim_customers               -- From dimension table of customers
GROUP BY country                      -- Group results by country
ORDER BY total_customers DESC;        -- Sort by descending number of customers

-- Find total customers by gender
SELECT
    gender,                            -- Gender (e.g., Male, Female)
    COUNT(customer_key) AS total_customers  -- Count of customers per gender
FROM gold.dim_customers
GROUP BY gender
ORDER BY total_customers DESC;

-- Find total products by category
SELECT
    category,                          -- Product category
    COUNT(product_key) AS total_products   -- Count of products in each category
FROM gold.dim_products
GROUP BY category
ORDER BY total_products DESC;

-- What is the average cost in each category?
SELECT
    category,                          -- Product category
    AVG(cost) AS avg_cost              -- Average cost of products in the category
FROM gold.dim_products
GROUP BY category
ORDER BY avg_cost DESC;

-- What is the total revenue generated for each category?
SELECT
    p.category,                        -- Product category
    SUM(f.sales_amount) AS total_revenue  -- Total sales for the category
FROM gold.fact_sales f
LEFT JOIN gold.dim_products p         -- Join with products to get category
    ON p.product_key = f.product_key
GROUP BY p.category
ORDER BY total_revenue DESC;

-- What is the total revenue generated by each customer?
SELECT
    c.customer_key,                    -- Unique customer ID
    c.first_name,                      -- Customer's first name
    c.last_name,                       -- Customer's last name
    SUM(f.sales_amount) AS total_revenue  -- Total sales by this customer
FROM gold.fact_sales f
LEFT JOIN gold.dim_customers c        -- Join with customers to get names
    ON c.customer_key = f.customer_key
GROUP BY 
    c.customer_key,
    c.first_name,
    c.last_name
ORDER BY total_revenue DESC;

-- What is the distribution of sold items across countries?
SELECT
    c.country,                         -- Country of the customer
    SUM(f.quantity) AS total_sold_items  -- Total quantity sold to customers in that country
FROM gold.fact_sales f
LEFT JOIN gold.dim_customers c        -- Join with customers to get country
    ON c.customer_key = f.customer_key
GROUP BY c.country
ORDER BY total_sold_items DESC;
